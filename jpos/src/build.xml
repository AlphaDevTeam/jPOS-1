<project name="jPOS" default="targets" basedir=".">
  <target name="init">
    <property name="project" value="jpos" />
    <property name="source" value="src" />
    <property name="main" value="${source}/main" />
    <property name="ext"  value="${source}/ext" />
    <property name="build" value="build" />
    <property name="classes" value="${build}/classes" />
    <property name="examples"  value="${source}/examples" />
    <property name="ext-examples"  value="${source}/ext-examples" />
    <property name="classes.examples"  value="${build}/examples" />
    <property name="dist" value="dist" />
    <property name="lib" value="lib" />
    <property name="doc" value="${source}/doc" />
    <property name="etc" value="${source}/etc" />

    <property file="${etc}/VERSION" />
    <property name="classpath" value="${classpath}:${classes}" />
    <property name="deprecation" value="true" />
    <property name="debug" value="off" />
    <property name="archive" value="${project}-${version}" />

    <!-- External propietary modules -->
    <property name="mod-uruguay"  value="${source}/mod-uruguay" />

  </target>

  <target name="targets">
    <echo message="ANT build for ${project} ${version}"/>
    <echo message="Available targets:"/>
    <echo message="  clean    Cleans ${build} and ${dist} directories" />
    <echo message="  main     Builds main ${project} packages" />
    <echo message=
	"   ext     Builds extended ${project} classes (see ext/README)" />
    <echo message="  cvs      Clean and update CVS tree for ${project}" />
    <echo message="  javadoc  Create javadoc documentation for main module" />
    <echo message="  extdoc   Create main+ext javadoc docuemtation" />
    <echo message="  doc      Create full documentation (including extdoc)" />
    <echo message="  examples Build examples" />
    <echo message="  ext-examples Build extended examples (requires ext)" />
    <echo message="  jar      Generates ${archive}.jar" />
    <echo message="  tarball  Generates distro tarball" />
    <echo message=
      "  extdoc  Create javadoc documentation for main+ext modules" />
  </target>

  <target name="prepare">
    <mkdir dir="${build}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${classes.examples}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="clean">
    <deltree dir="${build}"/>
    <deltree dir="${dist}"/>
  </target>


  <!-- Build all the sources with debug and deprecation -->
  <target name="main" depends="prepare">
    <javac srcdir="${main}" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <target name="ext" depends="main">
    <javac srcdir="${ext}" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <target name="examples" depends="main">
    <javac srcdir="${examples}" destdir="${classes.examples}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <target name="ext-examples" depends="ext">
    <javac srcdir="${ext-examples}" destdir="${classes.examples}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <target name="mod-uruguay" depends="ext">
    <javac srcdir="${mod-uruguay}" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <target name="jar" depends="main">
    <delete file="${dist}/${archive}.jar" />
    <copyfile src="${source}/etc/MANIFEST.MF" dest="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" 
             token="$$VERSION$$" value="${version}"/>
    <copyfile src="${source}/etc/LICENSE" dest="${classes}/LICENSE" />
    <copyfile src="${source}/etc/README" dest="${classes}/README" />
    <copyfile src="${source}/etc/CHANGELOG" dest="${classes}/CHANGELOG" />
    <copyfile src="${source}/etc/jpos.cfg" dest="${classes}/jpos.cfg" />

    <jar jarfile="${dist}/${archive}.jar" 
         basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" 
	 includes="LICENSE,README,CHANGELOG,org/**" />
  </target>

  <target name="cvs" depends="clean">
    <cvs cvsRoot=":pserver:anon@csdev.cs.com.uy:/cvs/${project}"
         dest="." package="${project}" />
  </target>

  <target name="javadoc" depends="main">
    <mkdir   dir="${build}/doc" />
    <mkdir   dir="${build}/doc/images" />
    <deltree dir="${build}/doc/javadoc" />
    <mkdir   dir="${build}/doc/javadoc" />
    <copydir src="${doc}/images"  dest="${build}/doc/images" />
    <javadoc sourcepath="${main}"
	destdir="${build}/doc/javadoc" dir="."
        windowtitle="jPOS ${version} API Documentation" 
        doctitle="jPOS ${version} API Documentation" 
        header="jPOS ${version} API Documentation" 
	footer="CompuService Srl."
	public="true" noindex="true" author="true" 
	overview="${doc}/javadoc/Overview.html"
        packagenames="org.jpos.util, org.jpos.iso.*, org.jpos.core.*, org.jpos.apps.*"
    />
  </target>

  <target name="extdoc" depends="ext">
    <mkdir   dir="${build}/doc" />
    <deltree dir="${build}/doc/javadoc" />
    <mkdir   dir="${build}/doc/javadoc" />
    <mkdir   dir="${build}/doc/javadoc/images" />
    <deltree dir="${build}/doc/tmp" />
    <mkdir   dir="${build}/doc/tmp" />
    <copydir src="${main}" dest="${build}/doc/tmp" />
    <copydir src="${ext}"  dest="${build}/doc/tmp" />
    <copydir src="${doc}/images"  dest="${build}/doc/images" />
    <javadoc sourcepath="${build}/doc/tmp"
	destdir="${build}/doc/javadoc" dir="."
        windowtitle="jPOS ${version} API Documentation" 
        doctitle="jPOS ${version} API Documentation" 
        header="jPOS ${version} API Documentation" 
	footer="CompuService Srl."
	public="true" noindex="true" author="true" 
	overview="${doc}/javadoc/Overview.html"
        packagenames="org.jpos.util, org.jpos.iso.*, org.jpos.core.*, org.jpos.apps.*"
    />
    <deltree dir="${build}/doc/tmp" />
  </target>

  <target name="doc" depends="extdoc">
    <mkdir   dir="${build}/doc" />
    <copydir src="${doc}"  dest="${build}/doc" includes="*.html" />
  </target>

  <target name="source" depends="prepare">
    <deltree dir="${build}/src" />
    <mkdir   dir="${build}/src" />
    <copydir src="${source}/main" dest="${build}/src" excludes="CVS/*" />
    <copydir src="${source}/ext"  dest="${build}/src" excludes="CVS/*" />
    <copydir src="${source}/examples"  
             dest="${build}/src/examples" excludes="CVS/*" />
    <fixcrlf srcdir="${build}/src" includes="*" />
  </target>

  <target name="tarball" depends="jar, doc, source">
    <property name="bin" value="${build}/${archive}" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <deltree  dir="${bin}" />
    <mkdir    dir="${bin}" />
    <copyfile src="${etc}/README"
              dest="${bin}/README" />
    <copyfile src="${etc}/LICENSE"
              dest="${bin}/LICENSE" />
    <copyfile src="${etc}/CHANGELOG"
              dest="${bin}/CHANGELOG" />
    <copyfile src="${dist}/${archive}.jar"
              dest="${bin}/${archive}.jar" />

    <tar includes="${archive}/** src/** doc/**" basedir="${build}"
         tarfile="${dist}/${archive}.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}.tar" zipfile="${dist}/${archive}.tgz"/>
    <delete file="${dist}/${archive}.tar" />

    <zip zipfile="${dist}/${archive}.zip" basedir="${build}"
         includes="${archive}/** src/** doc/**" />
  </target>
</project>

