<?xml version="1.0"?> 

<!-- $Id$ -->

<project name="jPOS" default="targets" basedir="..">
  <property name="source" value="src" />
  <property name="main" value="${source}/main" />
  <property name="ext" value="${source}/ext" />
  <property name="ext.includes" value="" />
  <property name="build" value="build" />
  <property name="classes" value="${build}/classes" />
  <property name="examples"  value="${source}/examples" />
  <property name="ext-examples"  value="${source}/ext-examples" />
  <property name="classes.examples"  value="${build}/examples" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="extlib" value="ext" />
  <property name="doc" value="${source}/doc" />
  <property name="etc" value="${source}/etc" />
  <property name="htdocs" value="${build}" />

  <property file="${etc}/VERSION" />
  <property name="classpath" value="${classpath}:${classes}" />
  <property name="deprecation" value="false" />
  <property name="debug" value="on" />
  <property name="project" value="jpos" />
  <property name="archive" value="${project}-${version}" />

  <target name="targets">
    <echo>

        ANT build for ${project} ${version}
        Available targets:
        clean        Cleans ${build} and ${dist} directories
        main         Builds main ${project} packages
        ext          extended (optional) ${project} classes (see ext/README)
        cvs          Clean and update CVS tree for ${project}
        doc          Create project documentation (including javadoc)
        examples     Build examples
        ext-examples Build extended examples (requires ext)
        test         Test jPOS using jUnit
        jar          Generates ${archive}.jar
        qsp          Generates ${archive}.jar containing QSP application
        tarball      Generates distro tarball

    </echo>
  </target>

  <target name="prepare">
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/test"/>
    <mkdir dir="${htdocs}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${classes.examples}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="log"/>
  </target>

  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <path id="main.classpath">
      <pathelement path="${classpath}"/>
      <fileset dir="${lib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
  </path>

  <path id="ext.classpath">
      <pathelement path="${classpath}"/>
      <fileset dir="${lib}">
          <include name="*.jar"/>
      </fileset>
      <fileset dir="${extlib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
  </path>

  <path id="test.classpath">
      <pathelement path="${classpath}"/>
      <fileset dir="${lib}">
          <include name="*.jar" />
          <exclude name="crimson.jar" />
      </fileset>
      <fileset dir="${extlib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/test"/>
      <pathelement location="${build}/classes"/>
  </path>

  <target name="main" depends="prepare">
    <javac srcdir="${main}" destdir="${classes}"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="main.classpath" />
    </javac>
  </target>

  <target name="ext.check" depends="main">
    <available property="sun-util.present"
           classpathref="ext.classpath"
              classname="com.sun.jini.reliableLog.ReliableLog" />
    <available property="comm.present"
           classpathref="ext.classpath"
              classname="javax.comm.SerialPort" />
    <available property="jnet.present"
           classpathref="ext.classpath"
          classname="javax.net.ServerSocketFactory" />
    <available property="jce.present"
           classpathref="ext.classpath"
          classname="javax.crypto.SecretKey" />
    <available property="activation.present"
           classpathref="ext.classpath"
          classname="javax.activation.DataSource" />
    <available property="opencard.present"
           classpathref="ext.classpath"
              classname="opencard.opt.util.TLV" />
    <available property="jetty.present"
           classpathref="ext.classpath"
              classname="org.mortbay.jetty.Server" />
  </target>

  <target name="ext.check.jsse" depends="ext.check" if="jnet.present">
    <available property="jsse.present"
           classpathref="ext.classpath"
          classname="javax.net.ssl.SSLSocket" />
  </target>
  <target name="ext.check.mail" depends="ext.check" if="activation.present">
    <available property="mail.present"
           classpathref="ext.classpath"
          classname="javax.mail.Address" />
  </target>

  <target name="ext.sun-util" depends="ext.check" if="sun-util.present">
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/ReliableSequencer.java,**/SAFChannel*.java"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.jetty" depends="ext.check" if="jetty.present">
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/apps/jetty/**"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.comm" depends="ext.check" if="comm.present">
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/VISA1Link.java, **/V24.java, **/*Modem.java"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.jsse" depends="ext.check.jsse" if="jsse.present" >
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/SunJSSESocketFactory.java"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.jce" depends="ext.check" if="jce.present" >
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/CryptoPackager.java"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.opencard" depends="ext.check" if="opencard.present" >
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/TLV*Packager.java"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.mail" depends="ext.check.mail" if="mail.present" >
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/OperatorLogListener.java"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext.jceadapter" depends="ext.check" if="jce.present">
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/security/jceadapter/**"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="ext" 
       depends="ext.sun-util, ext.comm, ext.jsse, ext.jce, ext.mail, ext.opencard, ext.jetty, ext.jceadapter">
    <javac srcdir="${ext}" destdir="${classes}"
        includes="**/apps/qsp/**"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="examples" depends="main">
    <javac srcdir="${examples}" destdir="${classes.examples}"
           classpath="${classpath}" debug="on" 
           deprecation="${deprecation}">
        <classpath refid="main.classpath" />
    </javac>
  </target>

  <target name="ext-examples" depends="ext">
    <javac srcdir="${ext-examples}" destdir="${classes.examples}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}">
        <classpath refid="ext.classpath" />
    </javac>

    <!-- QSP stuff -->
    <mkdir dir="${ext-examples}/qsp/dtd" />
    <copy file="${source}/config/qsp/qsp-config.dtd"
        tofile="${ext-examples}/qsp/dtd/qsp-config.dtd" />
  </target>

  <target name="compile.test" depends="ext">
    <javac srcdir="${source}/test"
           destdir="${build}/test"
           debug="${debug}" deprecation="${deprecation}">
      <classpath refid="test.classpath" />
    </javac>
  </target>

  <target name="test" depends="compile.test">
    <java classname="junit.textui.TestRunner" fork="yes">
      <classpath refid="test.classpath" />
      <arg value="AllTests" />
      <jvmarg value="-Dlog4j.config=src/test/cfg/log4j.xml" />
    </java>
  </target>

  <target name="jar" depends="main">
    <delete file="${dist}/${archive}.jar" />
    <copy file="${source}/etc/MANIFEST.MF" tofile="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" 
             token="$$VERSION$$" value="${version}"/>
    <copy file="${source}/etc/LICENSE" tofile="${classes}/LICENSE" />
    <copy file="${source}/etc/README"  tofile="${classes}/README" />
    <copy file="ChangeLog" tofile="${classes}/ChangeLog" />
    <copy file="${source}/etc/jpos.cfg"  tofile="${classes}/jpos.cfg" />

    <jar jarfile="${dist}/${archive}.jar" 
         basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" 
	 includes="LICENSE,README,org/**" />
  </target>

  <target name="qsp" depends="ext, jar" />

  <target name="cvs" depends="clean">
    <cvs cvsRoot=":pserver:anonymous@cvs.jpos.sourceforge.net:/cvsroot/jpos"
         dest="." package="${project}" />
  </target>

  <target name="javadoc" depends="prepare">
    <mkdir   dir="${htdocs}/doc" />
    <delete  dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc/images" />
    <delete  dir="${htdocs}/doc/tmp" />
    <mkdir   dir="${htdocs}/doc/tmp" />
    <copy  todir="${htdocs}/doc/tmp">
        <fileset dir="${main}" />
        <fileset dir="${ext}" />
    </copy>
    <copy  todir="${htdocs}/doc/images">
        <fileset dir="${doc}/images" />
    </copy>
    <javadoc sourcepath="${htdocs}/doc/tmp"
	destdir="${htdocs}/doc/javadoc"
        windowtitle="jPOS ${version} API Documentation" 
        doctitle="jPOS ${version} API Documentation" 
        header="jPOS ${version} API Documentation" 
	footer="CompuService Srl."
	public="true" noindex="true" author="true" 
        classpathref="ext.classpath"
	overview="${doc}/javadoc/Overview.html"
        packagenames="org.jpos.*"
    />
    <delete dir="${htdocs}/doc/tmp" />
  </target>

  <target name="doc" depends="javadoc">
    <mkdir   dir="${build}/doc" />
    <copy  todir="${htdocs}/doc">
        <fileset dir="${doc}">
          <patternset>
            <include name="*.html" />
          </patternset>
        </fileset>
    </copy>
  </target>

  <target name="source" depends="prepare">
    <delete  dir="${build}/src" />
    <mkdir   dir="${build}/src" />
    <copy  todir="${build}/src">
        <fileset dir="${main}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
        <fileset dir="${ext}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
    </copy>
    <fixcrlf srcdir="${build}/src" includes="*" />
  </target>

  <target name="tarball" depends="ext, jar, doc, source">
    <property name="bin" value="${build}/${archive}" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <delete    dir="${bin}" />
    <mkdir     dir="${bin}" />
    <copy     file="${etc}/README"
            tofile="${bin}/README" />
    <copy     file="${etc}/LICENSE"
            tofile="${bin}/LICENSE" />
    <copy     file="ChangeLog"
            tofile="${bin}/ChangeLog" />
    <copy     file="${dist}/${archive}.jar"
            tofile="${bin}/${archive}.jar" />

    <tar includes="${archive}/** src/** doc/**" basedir="${build}"
         tarfile="${dist}/${archive}.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}.tar" zipfile="${dist}/${archive}.tgz"/>
    <delete file="${dist}/${archive}.tar" />

    <zip zipfile="${dist}/${archive}.zip" basedir="${build}"
         includes="${archive}/** src/** doc/**" />
  </target>
</project>

