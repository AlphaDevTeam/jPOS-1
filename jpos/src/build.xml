<?xml version="1.0"?> 

<!-- $Id$ -->

<project name="jPOS" default="targets" basedir="..">
  <property name="source" value="src" />
  <property name="main" value="${source}/main" />
  <property name="ext" value="${source}/ext" />
  <property name="build" value="build" />
  <property name="classes" value="${build}/classes" />
  <property name="examples"  value="${source}/examples" />
  <property name="ext-examples"  value="${source}/ext-examples" />
  <property name="classes.examples"  value="${build}/examples" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="extlib" value="ext" />
  <property name="doc" value="${source}/doc" />
  <property name="etc" value="${source}/etc" />
  <property name="htdocs" value="${build}/htdocs" />

  <property file="${etc}/VERSION" />
  <property name="classpath" value="${classpath}:${classes}" />
  <property name="deprecation" value="false" />
  <property name="debug" value="on" />
  <property name="project" value="jpos" />
  <property name="archive" value="${project}-${version}" />
  <property name="qsp-archive" value="qsp-${version}" />

  <property name="mod-uruguay"  value="${source}/mod-uruguay" />
  <property name="mod-jordan"  value="${source}/mod-jordan" />

  <target name="targets">
    <echo>

        ANT build for ${project} ${version}
        Available targets:
        clean        Cleans ${build} and ${dist} directories
        main         Builds main ${project} packages
        ext          extended ${project} classes (see ext/README)
        cvs          Clean and update CVS tree for ${project}
        javadoc      Create javadoc documentation for main module
        extdoc       Create main+ext javadoc docuemtation
        doc          Create full documentation (including extdoc)
        examples     Build examples
        ext-examples Build extended examples (requires ext)
        jar          Generates ${archive}.jar
        qsp          Generates ${qsp-archive}.jar
        tarball      Generates distro tarball

    </echo>
  </target>

  <target name="prepare">
    <mkdir dir="${build}"/>
    <mkdir dir="${htdocs}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${classes.examples}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="log"/>
  </target>

  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <path id="main.classpath">
      <pathelement path="${classpath}"/>
      <fileset dir="${lib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
  </path>

  <path id="ext.classpath">
      <pathelement path="${classpath}"/>
      <fileset dir="${lib}">
          <include name="*.jar"/>
      </fileset>
      <fileset dir="${extlib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
  </path>

  <target name="main" depends="prepare">
    <javac srcdir="${main}" destdir="${classes}"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="main.classpath" />
    </javac>
  </target>

  <target name="ext" depends="main">
    <javac srcdir="${ext}" destdir="${classes}"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="examples" depends="main">
    <javac srcdir="${examples}" destdir="${classes.examples}"
           classpath="${classpath}" debug="on" 
           deprecation="${deprecation}">
        <classpath refid="main.classpath" />
    </javac>
  </target>

  <target name="ext-examples" depends="ext">
    <javac srcdir="${ext-examples}" destdir="${classes.examples}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}">
        <classpath refid="ext.classpath" />
    </javac>

    <!-- QSP stuff -->
    <mkdir dir="${ext-examples}/qsp/dtd" />
    <copy file="${ext}/org/jpos/apps/qsp/qsp-config.dtd"
        tofile="${ext-examples}/qsp/dtd/qsp-config.dtd" />
  </target>

  <target name="mod-uruguay" depends="ext">
    <javac srcdir="${mod-uruguay}" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}">
        <classpath refid="ext.classpath" />
    </javac>
  </target>
  <target name="mod-jordan" depends="ext">
    <javac srcdir="${mod-jordan}" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}">
        <classpath refid="ext.classpath" />
    </javac>
  </target>

  <target name="jar" depends="main">
    <delete file="${dist}/${archive}.jar" />
    <copy file="${source}/etc/MANIFEST.MF" tofile="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" 
             token="$$VERSION$$" value="${version}"/>
    <copy file="${source}/etc/LICENSE" tofile="${classes}/LICENSE" />
    <copy file="${source}/etc/README"  tofile="${classes}/README" />
    <copy file="ChangeLog" tofile="${classes}/ChangeLog" />
    <copy file="${source}/etc/jpos.cfg"  tofile="${classes}/jpos.cfg" />

    <jar jarfile="${dist}/${archive}.jar" 
         basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" 
	 includes="LICENSE,README,CHANGELOG,org/**" />
  </target>

  <target name="qsp" depends="ext">
    <delete file="${dist}/${qsp-archive}.jar" />
    <copy file="${source}/etc/MANIFEST-QSP.MF" 
        tofile="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" 
             token="$$VERSION$$" value="${version}"/>
    <copy file="${source}/etc/LICENSE" tofile="${classes}/LICENSE" />
    <copy file="${source}/etc/README"  tofile="${classes}/README" />
    <copy file="${source}/etc/CHANGELOG" tofile="${classes}/CHANGELOG" />

    <jar jarfile="${dist}/${qsp-archive}.jar" 
         basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" 
	 includes="LICENSE,README,CHANGELOG,org/**" />
  </target>

  <target name="cvs" depends="clean">
    <cvs cvsRoot=":pserver:anon@csdev.cs.com.uy:/cvs/${project}"
         dest="." package="${project}" />
  </target>

  <target name="javadoc" depends="main">
    <mkdir   dir="${htdocs}/doc" />
    <mkdir   dir="${htdocs}/doc/images" />
    <delete  dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc" />
    <copy  todir="${htdocs}/doc/images">
        <fileset dir="${doc}/images" />
    </copy>
    <javadoc sourcepath="${main}"
	destdir="${htdocs}/doc/javadoc" 
        windowtitle="jPOS ${version} API Documentation" 
        doctitle="jPOS ${version} API Documentation" 
        header="jPOS ${version} API Documentation" 
	footer="CompuService Srl."
	public="true" noindex="true" author="true" 
	overview="${doc}/javadoc/Overview.html"
        packagenames="org.jpos.util, org.jpos.iso.*, org.jpos.core.*, org.jpos.tpl.*"
    />
  </target>

  <target name="extdoc" depends="ext">
    <mkdir   dir="${htdocs}/doc" />
    <deltree dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc/images" />
    <delete  dir="${htdocs}/doc/tmp" />
    <mkdir   dir="${htdocs}/doc/tmp" />
    <copy  todir="${htdocs}/doc/tmp">
        <fileset dir="${main}" />
        <fileset dir="${ext}" />
    </copy>
    <copy  todir="${htdocs}/doc/images">
        <fileset dir="${doc}/images" />
    </copy>
    <javadoc sourcepath="${htdocs}/doc/tmp"
	destdir="${htdocs}/doc/javadoc"
        windowtitle="jPOS ${version} API Documentation" 
        doctitle="jPOS ${version} API Documentation" 
        header="jPOS ${version} API Documentation" 
	footer="CompuService Srl."
	public="true" noindex="true" author="true" 
        classpathref="ext.classpath"
	overview="${doc}/javadoc/Overview.html"
        packagenames="org.jpos.util, org.jpos.iso.*, org.jpos.core.*, org.jpos.tpl.*"
    />
    <delete dir="${htdocs}/doc/tmp" />
  </target>

  <target name="doc" depends="extdoc">
    <mkdir   dir="${build}/doc" />
    <copy  todir="${htdocs}/doc">
        <fileset dir="${doc}">
          <patternset>
            <include name="*.html" />
          </patternset>
        </fileset>
    </copy>
  </target>

  <target name="source" depends="prepare">
    <delete  dir="${build}/src" />
    <mkdir   dir="${build}/src" />
    <copy  todir="${build}/src">
        <fileset dir="${main}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
        <fileset dir="${ext}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
        <fileset dir="${examples}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
    </copy>
    <fixcrlf srcdir="${build}/src" includes="*" />
  </target>

  <target name="tarball" depends="jar, doc, source">
    <property name="bin" value="${build}/${archive}" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <delete    dir="${bin}" />
    <mkdir     dir="${bin}" />
    <copy     file="${etc}/README"
            tofile="${bin}/README" />
    <copy     file="${etc}/LICENSE"
            tofile="${bin}/LICENSE" />
    <copy     file="ChangeLog"
            tofile="${bin}/ChangeLog" />
    <copy     file="${dist}/${archive}.jar"
            tofile="${bin}/${archive}.jar" />

    <tar includes="${archive}/** src/** doc/**" basedir="${build}"
         tarfile="${dist}/${archive}.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}.tar" zipfile="${dist}/${archive}.tgz"/>
    <delete file="${dist}/${archive}.tar" />

    <zip zipfile="${dist}/${archive}.zip" basedir="${build}"
         includes="${archive}/** src/** doc/**" />
  </target>
</project>

