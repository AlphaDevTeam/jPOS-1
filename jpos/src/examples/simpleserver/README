$Id$

A jPOS server application is very simple:

  1) construct a ServerSocket, 
  2) sit in a loop accepting connections 
  3) create a server ISOChannel with the new accepted Socket
  4) launch a Thread to handle the session

This example demonstrate also a few other simple things:

  1) implementing a LogProducer (there are situations were you can not
     extend SimpleLogListener, being a LogProducer is quite simple
     anyway, just set/getLogger and getRealm stuff)

  2) we use Configuration (see etc/jpos.cfg)

The example reads the following configuration properties:

    public static final String CFG_PORT     = "simpleserver.port"
    public static final String CFG_CHANNEL  = "simpleserver.channel"
    public static final String CFG_PACKAGER = "simpleserver.packager"
    public static final String CFG_HEADER   = "simpleserver.header"

You won't find 'simpleserver.header' in the configuration file
this property is there just in case your particular channel needs it 
(for example RawChannel to set its TPDU). 

After running you will see the message:

<log realm="SimpleServer" at="Wed Mar 08 08:06:04 NST 2000">
  <message>
    listening on port 8000
  </message>
</log>

at that point, in order to verify that the server is running, 
you can "telnet localhost 8000", you'll notice a session creation 
message as well as an EOFException when you terminate telnet session.

You can run now the simpleclient example that will send a couple
of messages to your new server.


